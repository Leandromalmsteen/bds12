{"ast":null,"code":"export const buildPieChartConfig = (labels = [], name) => {\n  return {\n    labels,\n    noData: {\n      text: 'Sem resultados',\n      align: 'center',\n      verticalAlign: 'middle',\n      offsetX: 0,\n      offsetY: 0,\n      style: {\n        color: '#FFF',\n        fontSize: '18px',\n        fontFamily: 'Ubuntu, sans-serif'\n      }\n    },\n    colors: ['#3e82f7', '#04d182', '#ffc107', '#ff6b72'],\n    legend: {\n      show: true,\n      floating: false,\n      position: 'bottom',\n      offsetY: 0,\n      labels: {\n        colors: ['#b4bed2']\n      },\n      fontFamily: 'Ubuntu, sans-serif',\n      fontSize: '18px',\n      itemMargin: {\n        vertical: 5\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    plotOptions: {\n      pie: {\n        size: 400,\n        donut: {\n          size: '75%',\n          labels: {\n            show: true,\n            name: {\n              show: true,\n              offsetY: 10,\n              formatter: function () {\n                return name;\n              }\n            },\n            total: {\n              show: true,\n              showAlways: true,\n              fontSize: '24px',\n              color: '#ABB1C0',\n              fontFamily: 'Ubuntu, sans-serif',\n              formatter: function () {\n                return '';\n              }\n            }\n          }\n        }\n      }\n    },\n    chart: {\n      height: '400px'\n    }\n  };\n};\nexport const buildChartSeries = (salesByGender = []) => {\n  return salesByGender.map(({\n    gender,\n    sum\n  }) => ({\n    x: gender,\n    y: sum\n  }));\n};","map":{"version":3,"names":["buildPieChartConfig","labels","name","noData","text","align","verticalAlign","offsetX","offsetY","style","color","fontSize","fontFamily","colors","legend","show","floating","position","itemMargin","vertical","dataLabels","enabled","plotOptions","pie","size","donut","formatter","total","showAlways","chart","height","buildChartSeries","salesByGender","map","gender","sum","x","y"],"sources":["/home/leandro/Projetos/bds12 a fazer/bds08/frontend/src/components/sales-by-store/helpers.ts"],"sourcesContent":["import { ApexOptions } from 'apexcharts';\nimport { SalesByGender } from '../../../types';\n\nexport const buildPieChartConfig = (labels: string[] = [], name: string) => {\n  return {\n    labels,\n    noData: {\n      text: 'Sem resultados',\n      align: 'center',\n      verticalAlign: 'middle',\n      offsetX: 0,\n      offsetY: 0,\n      style: {\n        color: '#FFF',\n        fontSize: '18px',\n        fontFamily: 'Ubuntu, sans-serif'\n      }\n    },\n    colors: ['#3e82f7', '#04d182', '#ffc107', '#ff6b72'],\n    legend: {\n      show: true,\n      floating: false,\n      position: 'bottom',\n      offsetY: 0,\n      labels: {\n        colors: ['#b4bed2']\n      },\n      fontFamily: 'Ubuntu, sans-serif',\n      fontSize: '18px',\n      itemMargin: {\n        vertical: 5\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    plotOptions: {\n      pie: {\n        size: 400,\n        donut: {\n          size: '75%',\n          labels: {\n            show: true,\n            name: {\n              show: true,\n              offsetY: 10,\n              formatter: function () {\n                return name;\n              }\n            },\n            total: {\n              show: true,\n              showAlways: true,\n              fontSize: '24px',\n              color: '#ABB1C0',\n              fontFamily: 'Ubuntu, sans-serif',\n              formatter: function () {\n                return '';\n              }\n            }\n          }\n        }\n      }\n    },\n    chart: {\n      height: '400px'\n    }\n  } as ApexOptions;\n};\n\nexport const buildChartSeries = (salesByGender: SalesByGender[] = []) => {\n  return salesByGender.map(({gender, sum}) => ({\n    x:gender,\n    y:sum\n  }));\n};\n"],"mappings":"AAGA,OAAO,MAAMA,mBAAmB,GAAGA,CAACC,MAAgB,GAAG,EAAE,EAAEC,IAAY,KAAK;EAC1E,OAAO;IACLD,MAAM;IACNE,MAAM,EAAE;MACNC,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,QAAQ;MACfC,aAAa,EAAE,QAAQ;MACvBC,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,CAAC;MACVC,KAAK,EAAE;QACLC,KAAK,EAAE,MAAM;QACbC,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE;MACd;IACF,CAAC;IACDC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACpDC,MAAM,EAAE;MACNC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,QAAQ;MAClBT,OAAO,EAAE,CAAC;MACVP,MAAM,EAAE;QACNY,MAAM,EAAE,CAAC,SAAS;MACpB,CAAC;MACDD,UAAU,EAAE,oBAAoB;MAChCD,QAAQ,EAAE,MAAM;MAChBO,UAAU,EAAE;QACVC,QAAQ,EAAE;MACZ;IACF,CAAC;IACDC,UAAU,EAAE;MACVC,OAAO,EAAE;IACX,CAAC;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,IAAI,EAAE,GAAG;QACTC,KAAK,EAAE;UACLD,IAAI,EAAE,KAAK;UACXvB,MAAM,EAAE;YACNc,IAAI,EAAE,IAAI;YACVb,IAAI,EAAE;cACJa,IAAI,EAAE,IAAI;cACVP,OAAO,EAAE,EAAE;cACXkB,SAAS,EAAE,SAAAA,CAAA,EAAY;gBACrB,OAAOxB,IAAI;cACb;YACF,CAAC;YACDyB,KAAK,EAAE;cACLZ,IAAI,EAAE,IAAI;cACVa,UAAU,EAAE,IAAI;cAChBjB,QAAQ,EAAE,MAAM;cAChBD,KAAK,EAAE,SAAS;cAChBE,UAAU,EAAE,oBAAoB;cAChCc,SAAS,EAAE,SAAAA,CAAA,EAAY;gBACrB,OAAO,EAAE;cACX;YACF;UACF;QACF;MACF;IACF,CAAC;IACDG,KAAK,EAAE;MACLC,MAAM,EAAE;IACV;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,aAA8B,GAAG,EAAE,KAAK;EACvE,OAAOA,aAAa,CAACC,GAAG,CAAC,CAAC;IAACC,MAAM;IAAEC;EAAG,CAAC,MAAM;IAC3CC,CAAC,EAACF,MAAM;IACRG,CAAC,EAACF;EACJ,CAAC,CAAC,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}