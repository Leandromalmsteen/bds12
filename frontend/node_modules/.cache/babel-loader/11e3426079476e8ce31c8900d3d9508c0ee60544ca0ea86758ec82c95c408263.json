{"ast":null,"code":"export const formatPrice = price => {\n  return new Intl.NumberFormat('pt-BR', {\n    minimumFractionDigits: 2,\n    style: 'currency',\n    currency: 'BRL'\n  }).format(price);\n};\nexport const formatGender = gender => {\n  const textByGender = {\n    MASCULINO: 'Masculino',\n    FEMININO: 'Feminino',\n    OTHER: 'Outro'\n  };\n  return textByGender[gender];\n};","map":{"version":3,"names":["formatPrice","price","Intl","NumberFormat","minimumFractionDigits","style","currency","format","formatGender","gender","textByGender","MASCULINO","FEMININO","OTHER"],"sources":["/home/leandro/Projetos/bds12 a fazer/bds08/frontend/src/utils/formatters.ts"],"sourcesContent":["import { Gender } from '../types';\n\nexport const formatPrice = (price: number) => {\n  return new Intl.NumberFormat('pt-BR', {\n    minimumFractionDigits: 2,\n    style: 'currency',\n    currency: 'BRL'\n  }).format(price);\n};\n\nexport const formatGender = (gender: Gender) => {\n  const textByGender = {\n    MASCULINO: 'Masculino',\n    FEMININO: 'Feminino',\n    OTHER: 'Outro'\n  };\n\n  return textByGender[gender];\n};\n"],"mappings":"AAEA,OAAO,MAAMA,WAAW,GAAIC,KAAa,IAAK;EAC5C,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IACpCC,qBAAqB,EAAE,CAAC;IACxBC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE;EACZ,CAAC,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC;AAClB,CAAC;AAED,OAAO,MAAMO,YAAY,GAAIC,MAAc,IAAK;EAC9C,MAAMC,YAAY,GAAG;IACnBC,SAAS,EAAE,WAAW;IACtBC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE;EACT,CAAC;EAED,OAAOH,YAAY,CAACD,MAAM,CAAC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}